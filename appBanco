/*Desafio Final!
Chegamos ao último desafio da UC de Fundamenos de Algoritmo!  
Neste desafio, você deverá implementar um "App Bancário" para gerenciamento de contas, saldos e empréstimos de
 clientes em cadastrados no aplicativo.
O programa deverá ser implementado utilzando a linguagem JavaScript, considerando os conhecimentos de programação 
adquiridos até o momento (objetos, funções, vetores, estruturas condicionais, estruturas de repetição, 
    declaração de variáveis e demais métodos praticados).
O aplicativo deverá conter
1. Uma função para cadastrar Clientes: que recebe os atributos de id, nome, sobrenome, agencia, conta, senha, saldoInicial, 
rendaMensal. O ID deverá ser atribuido automaticamente pelo algoritmo, com número inicial igual a 100. A numero da agência 
deverá ser o mesmo para todos clientes (n° 1014-0), porém o numero da conta deverá iniciar em 10.000 e será incrementado à 
medida em que forem adicionados novos clientes (exemplo: 10.001, 10.002...).

2. Uma função para excluir cadasto de cliente. A função deverá receber como parâmetro o número da conta do cliente e a senha 
. Realizar a exclusão somente do registro da conta informada.

3. Uma funçao para depositar dinheiro na conta. A função deve receber como parâmetro o número da conta do cliente, 
a senha e o valor do deposito. A função deve deve realizar a soma do valor depositado, no saldo atual da conta. Ao final
, deverá enviar uma mensagem de confirmação de depósito e apresentar o novo saldo na conta do cliente.

4. Uma função para sacar do dinheiro contido na conta. A função irá receber o numero da conta, a senha e valor de saque.
 Se valor do saque informado for maior que o saldo disponível, o sistema deverá apresentar a mensagem de "saldo insuficiente"
  além de apresentar saldo atual; Se o valor do saque for menor que o saldo disponível, realizar a operação de subtração dos
  valores e retornar a mensagem de confirmação da operação.

5. Uma função que permita a emissão do extrato da conta. A função recebe o numero da conta e a senha como parâmetros.
 Deverá apresentar na tela, de forma organizada, os dados de: nome do cliente, numero agência, numero conta e saldo atual do
  cliente que está acessando a conta.

6. Uma função que permita o banco emprestar dinheiro. A função, recebe o numero da conta,
 o valor do empréstimo e a quantidade de parcelas de prazo. Deverá ser aplicada uma taxa de 5% de juros sobre o valor
  solicitado de empréstimo. O limite de parcelas informado deve ser menor ou igual a 24 meses. Se o valor da prestaçao
   (considerando juros) for maior que 20% da renda mensal, o sistema deverá retornar uma mensagem de 'não concessão 
   de empréstimo',
    caso contrário, validar o empréstimo informado o valor mensal a ser pago e a quantidade de prestações contratadas.

7. O sistema deverá ser acessado por meio de um menu, com a impressão de um cabecalio em conjunto com as 
opções: 1. Depositar, 2. Sacar, 3. Extrato. O usuário deverá digitar o mumero correspondente a opção. 
O programa deverá solicitar os parâmetros das funções e realizar as operações requeridas. 
As funções relativas a cadastrar cliente e excluir cliente deverão estar ocultas do menu do usuário, 
sendo acessadas pelos numeros 300 e 400 respectivamente. O número 900 encerra a aplicação.

A entrega do código fonte deste desafio, deverá ser realizada até 15/10/2023.  */
const readline = require("readline-sync")

let clientes = []
const agenciaConta = "1014-0"

function cadastroCliente(nomeCliente, sobNomeCliente, senhaConta, saldoInicial, rendaMensal) {
    clientes.push(
    {
        id: retornaId(), //recebe a lista que em seguida passara os dados para o array livros
        nome: nomeCliente,
        sobrenome: sobNomeCliente,
        agencia: "1014-0",
        conta: criaConta(),
        senha: senhaConta,
        saldaInicial: saldoInicial,
        rendaMensal: rendaMensal
    })
}
function retornaId(){
    return clientes.length + 100
}
function criaConta() {
    return clientes.length + 10000
}
function excluirCliente(contaCliente, senhaConta) {
    let existeCliente = false;
    let indexCliente;
for (let i = 0; i < clientes.length; i++) {
    if ((clientes[i].conta === contaCliente) && (clientes[i].senha === senhaConta)){
        indexCliente = i;
        existeCliente = true
        console.log(`Cliente encontrado! `)
        break;
    }
}

if (existeCliente === true) {
    clientes.splice(indexCliente, 1)
    console.log("Cliente excluido com sucesso! " + indexCliente)
    cadastroCliente()
}else{
    console.log("Cliente não encontrado! ")
}
}

function deposito(contaCliente){
    contaCliente = readline.questionInt("Infome o numero da sua conta: ")
    senhaConta = readline.questionInt("Digite sua senha: ")
    if (contaCliente.length === contaCliente && senhaConta.length === senhaConta) {
        console.log("Os dados digitados estão corretos.")
        valorDeposito = readline.questionInt("Digite o valor a ser depositado: ")
        saldoAtual = saldoInicial + valorDeposito
        console.log(`Deposito realizado com sucesso, seu saldo atué é de R$${saldoAtual}`)
    } else {
        console.log("Conta não encontrada. digite novamente")
        return deposito()
    }
}





function menu(){

    console.log("******************************************")
    console.log("******* BEM VINDO AO BANCO TWO TWO *******")
    console.log("******************************************")
    console.log('*** MENU DE ACESSO ***')
    console.log('1: DEPOSITO')
    console.log('2: CADASTRAR USUARIO: ')
    console.log('3: INFORMAR EMPRESTIMO: ')
    console.log('4: INFORMAR DEVOLUCAO DO EMPRESTIMO')
    console.log('0: Encerrar programa.')
    let opcao = readline.questionInt('digite uma opcao: ')


switch (opcao) {
    case 300:
        nomeCliente = readline.question("Digite seu primeiro nome: ")
        sobNomeCliente = readline.question("Digite seu sobrenome: ")
        senhaConta = readline.questionInt("Digite sua senha: ")
        rendaMensal = readline.questionFloat("Digite sua renda  mensal: ")
        saldoInicial = readline.questionInt("Digite quanto deseja aplicar: ")
        cadastroCliente(nomeCliente, sobNomeCliente, senhaConta, saldoInicial, rendaMensal)
        console.log(`Conta cadastrada com sucesso! 
        Bem vindo - ${nomeCliente}!
        Os dados da sua conta são: Agencia: ${agenciaConta}.
        Conta: ${criaConta()}
        Saldo inicial de R$ ${saldoInicial}.`)
        opçao = readline.question("Pressione qualquer tecla para retornar ao menu.")
        return menu()
    case 400:
        contaCliente = readline.questionInt("Digite a conta a ser excluida: ")
        senhaConta = readline.questionInt("Digite a senha da conta que irá ser excluida: ")
        excluirCliente(contaCliente, senhaConta)
    case 1:
    
    default:
        break;
}
}

while (true) {
    menu()
}
